# FaceLyticalLib

A professional face detection and capture library for iOS applications.

## Features

- Real-time face detection using Vision framework
- Visual feedback when a face is detected
- Automatic image capture of detected faces
- Corner guides to help users position their face
- Built-in tutorial walkthrough for users
- Support for both UIKit and SwiftUI integration
- Base64 image conversion for network/storage use cases

## Requirements

- iOS 15.0+
- Swift 5.9+
- Xcode 14.0+

## Installation

### Swift Package Manager

Add the package dependency to your `Package.swift` file:

```swift
dependencies: [
    .package(url: "https://github.com/NightingaleNath/FaceLyticalLib.git", from: "1.0.0")
]
```

Or add it directly in Xcode:
1. File > Add Packages...
2. Enter the repository URL: `https://github.com/NightingaleNath/FaceLyticalLib.git`
3. Choose "Up to Next Major Version" with "1.0.0" as the version

### Manual Installation

If you prefer not to use Swift Package Manager, you can add the library manually:

1. Download or clone the repository
2. Drag and drop the `Sources/FaceLyticalLib` directory into your Xcode project
3. Make sure "Copy items if needed" is selected and add to your target

## Documentation

See the following files for detailed documentation:

- [Usage Guide](docs/USAGE.md) - Detailed implementation examples
- [API Reference](docs/API.md) - Complete API documentation
- [Troubleshooting](docs/TROUBLESHOOTING.md) - Common issues and solutions

## Quick Start

Don't forget to add the camera usage description to your `Info.plist`:

```xml
<key>NSCameraUsageDescription</key>
<string>This app needs camera access to detect and capture your face.</string>
```

### SwiftUI Example

```swift
import SwiftUI
import FaceLyticalLib

struct ContentView: View {
    @State private var capturedImage: UIImage?
    @State private var showingFaceDetection = false
    private let faceLytical = FaceLytical()
    
    var body: some View {
        VStack {
            if let image = capturedImage {
                Image(uiImage: image)
                    .resizable()
                    .scaledToFit()
            } else {
                Text("No image captured")
            }
            
            Button("Capture Face") {
                showingFaceDetection = true
            }
        }
        .fullScreenCover(isPresented: $showingFaceDetection) {
            faceLytical.createFaceDetectionView(onCapture: { image in
                capturedImage = image
                showingFaceDetection = false
            })
        }
    }
}
```

### UIKit Example

```swift
import UIKit
import FaceLyticalLib

class ViewController: UIViewController {
    private let imageView = UIImageView()
    private let faceLytical = FaceLytical()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
    }
    
    @objc private func captureButtonTapped() {
        faceLytical.presentFaceDetection(from: self) { [weak self] image in
            guard let self = self, let capturedImage = image else { return }
            self.imageView.image = capturedImage
        }
    }
}
```

## License

FaceLyticalLib is available under the MIT license. See the LICENSE file for more info.

## Credits

Created by Nathaniel Nkrumah
